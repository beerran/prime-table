!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/forms"),require("@angular/platform-browser"),require("@angular/platform-browser/animations"),require("primeng/contextmenu"),require("primeng/dropdown"),require("primeng/multiselect"),require("primeng/table"),require("primeng/tooltip"),require("primeng/treetable")):"function"==typeof define&&define.amd?define("prime-table",["exports","@angular/core","rxjs","@angular/forms","@angular/platform-browser","@angular/platform-browser/animations","primeng/contextmenu","primeng/dropdown","primeng/multiselect","primeng/table","primeng/tooltip","primeng/treetable"],t):t(e["prime-table"]={},e.ng.core,e.rxjs,e.ng.forms,e.ng.platformBrowser,e.ng.platformBrowser.animations,e.contextmenu,e.dropdown,e.multiselect,e.table,e.tooltip,e.treetable)}(this,function(e,t,n,o,l,r,i,a,s,c,u,d){"use strict";var p=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}();function m(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,l,r=n.call(e),i=[];try{for(;(void 0===t||0<t--)&&!(o=r.next()).done;)i.push(o.value)}catch(a){l={error:a}}finally{try{o&&!o.done&&(n=r["return"])&&n.call(r)}finally{if(l)throw l.error}}return i}function f(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(m(arguments[t]));return e}var g=function(){function e(e){switch(this.drilldown=!1,this.rowCount=!0,this.filters=!0,this["export"]=!0,this.sortable=!0,this.scrollable=!1,this.addButton=!1,this.editButton=!1,this.archiveButton=!1,this.responsive=!0,this.autoLayout=!0,this.rowsShown=null,this.size="md",this.columnSettings={resizable:!1,selectable:!1},this.tooltip=null,this.drilldownProperty=null,this.menu={enabled:!1,node:null,items:[]},e){case"easy":this.addButton=!0,this.editButton=!0,this.archiveButton=!0,this["export"]=!1,this.size="sm",this.scrollable=!1;break;case"drilldown":this.drilldown=!0,this.scrollable=!1;break;case"format":this.rowCount=!1,this["export"]=!1,this.columnSettings.selectable=!1,this.autoLayout=!1;break;case"standard":default:this.editButton=!0,this.addButton=!0,this.scrollable=!0,this.rowsShown=10}}return e.prototype.setDrilldownProperty=function(e){this.drilldownProperty=e},e.prototype.clear=function(){this.data=[],this.menu.node=null},e.prototype.setColumns=function(e){e.forEach(function(e){return e.field=e.name}),this.columns=f(e)},e.prototype.setData=function(e){this.data=f(e)},e.prototype.setTreeData=function(e){var t=this.getTreeNodes(e,this.drilldownProperty);this.data=f(t)},e.prototype.disable=function(e){var t=this;e.forEach(function(e){return t[e]=!1})},e.prototype.enable=function(e){var t=this;e.forEach(function(e){return t[e]=!0})},e.prototype.getTreeNodes=function(e,n){var o=this,l=[];return e.map(function(e){var t={data:e};e.hasOwnProperty(n)&&e[n]&&0<e[n].length&&(t.children=o.getTreeNodes(e[n],n)),l=f(l,[t])}),l},e}(),h=function(){function e(){var o=this;this._config=new g("standard"),this.dataLoaded=new n.BehaviorSubject(!1),this.showFilters=!1,this.hasReorderableColumn=!1,this.rowCount={options:[{label:"All",value:null},{label:"5",value:5},{label:"10",value:10},{label:"25",value:25},{label:"50",value:50},{label:"100",value:100}],selected:null},this.screenHeight="0px",this.columnsLoaded=new n.BehaviorSubject(!1),this.add=new t.EventEmitter,this.edit=new t.EventEmitter,this.archive=new t.EventEmitter,this.rowReordered=function(e){e.dropIndex>=e.dragIndex&&e.dropIndex--;var t=o._config.columns.find(function(e){return!0===e.reorderable});if(o._config.data[e.dropIndex][t.name]=e.dropIndex+1,e.dropIndex>e.dragIndex)for(var n=e.dragIndex;n<e.dropIndex;n++)o._config.data[n][t.name]=n+1;else for(n=e.dropIndex;n<=e.dragIndex;n++)o._config.data[n][t.name]=n+1},this.toggleFilters=function(){return o.showFilters=!o.showFilters},this.resolveKey=function(e,t){return e.split(".").reduce(function(e,t){return e?e[t]:null},t)},this.onResize()}return Object.defineProperty(e.prototype,"config",{set:function(e){e&&(this._config=e,this.setupColumns(),this.setupData(),this.rowCount.selected=this._config.rowsShown)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"data",{set:function(e){e&&(this._config.drilldown?this._config.setTreeData(e):this._config.setData(e),this.setupData())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"columns",{set:function(e){this._config.setColumns(e),this.setupColumns()},enumerable:!0,configurable:!0}),e.prototype.onResize=function(e){this.screenHeight=window.innerHeight-350+"px"},e.prototype.ngOnInit=function(){var t=this;this.hasReorderableColumn&&this.dataLoaded.subscribe(function(e){if(e){var n=t._config.columns.find(function(e){return!0===e.reorderable});t._config.sortable=!1,t._config.data.sort(function(e,t){return e[n.name]-t[n.name]})}})},e.prototype.setupData=function(){this.dataLoaded.next(!0)},e.prototype.setupColumns=function(){this.selectedColumns=this._config.columns.filter(function(e){return!1!==e.visible}),this.hasReorderableColumn=0<=this._config.columns.findIndex(function(e){return!0===e.reorderable}),this._config.columns.forEach(function(e){return e.hasSelect=e.values&&1<e.values.length}),this.columnsLoaded.next(!0)},e.prototype.getCellValue=function(e,t){return t.render?t.render(e):this.resolveKey(t.name,e)},e.prototype.getLinkValue=function(e,t){var n=t.withLink.dynamic?"/"+this.resolveKey(t.withLink.dynamic,e):"";return t.withLink.staticPath+n},e.decorators=[{type:t.Component,args:[{selector:"b-prime-table",template:'<p-contextMenu #cm appendTo="body" [model]="_config.menu.items"></p-contextMenu>\n\n\n<p-treeTable *ngIf="_config.drilldown" [value]="_config.data" [(contextMenuSelection)]="_config.menu.node" [contextMenu]="cm" [columns]="selectedColumns" class="table" [class.table-sm]="_config.size === \'sm\'">\n    <ng-template pTemplate="header" let-columns>\n        <tr>\n            <th *ngFor="let col of columns">{{col.displayName || col.name}}</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\n        <tr [ttContextMenuRow]="rowNode" tooltipPosition="top" [pTooltip]="_config.tooltip ? rowData[_config.tooltip] : null">\n            <td *ngFor="let col of columns; let i = index" [ngClass]="col.extraClass ? col.extraClass(rowData) : \'\'">\n                <p-treeTableToggler [rowNode]="rowNode" *ngIf="i === 0"></p-treeTableToggler>\n                <span>{{rowData[col.name]}}</span>\n            </td>\n        </tr>\n    </ng-template>\n</p-treeTable>\n<p-table [responsive]="_config.responsive" [autoLayout]="_config.autoLayout" (onRowReorder)="rowReordered($event)" *ngIf="!_config.drilldown" #dt [(contextMenuSelection)]="_config.menu.node" [contextMenu]="cm" [resizableColumns]="_config.columnSettings.resizable"\n    selectionMode="multiple" [(selection)]="selectedRows" [scrollHeight]="screenHeight" [paginator]="rowCount.selected ? _config.data.length > rowCount.selected : false" [rows]="rowCount.selected" class="table" [class.table-sm]="_config.size === \'sm\'" [value]="_config.data"\n    [columns]="selectedColumns">\n    <ng-template pTemplate="caption">\n        <div class="row">\n            <div class="col-6 col-md-2" *ngIf="_config.rowCount">\n                <p-dropdown class="pull-left" [options]="rowCount.options" [(ngModel)]="rowCount.selected"></p-dropdown>\n            </div>\n            <div class="col-6 col-md-3" *ngIf="_config.columnSettings.selectable" [class.col-md-5]="!_config.rowCount">\n                <p-multiSelect [options]="_config.columns" [(ngModel)]="selectedColumns" optionLabel="displayName" selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"></p-multiSelect>\n            </div>\n            <div class="col-12 col-md-7" [class.col-md-10]="!_config.columnSettings.selectable" [class.col-md-12]="!_config.rowCount && !_config.columnSettings.selectable">\n                <button *ngIf="_config.filters" class="btn btn-sm btn-dark d-inline" type="button" (click)="toggleFilters()">Filters</button>\n                <button *ngIf="_config.export" class="btn btn-sm btn-dark mx-2 d-inline" type="button" pButton iconPos="left" label="All Data" (click)="dt.exportCSV()">Export</button>\n                <button *ngIf="_config.addButton" class="btn btn-sm btn-success ml-2 pull-right" type="button" (click)="add.emit(true)">Add new</button>\n                <ng-content select=".table-extra-content"></ng-content>\n            </div>\n        </div>\n        <div class="row" *ngIf="showFilters">\n            <div class="col">\n                <input type="text" style="width:auto" class="form-control form-control-sm d-inline" pInputText size="50" placeholder="Global Filter" (input)="dt.filterGlobal($event.target.value, \'contains\')">\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate="header" let-columns>\n        <tr *ngIf="_config.sortable; else unsortableRow">\n            <th *ngIf="hasReorderableColumn" style="width:3rem"></th>\n            <th [pSortableColumn]="col.name" *ngFor="let col of columns" pResizableColumn>\n                {{col.displayName || col.name}}\n                <p-sortIcon [field]="col.name"></p-sortIcon>\n            </th>\n            <th *ngIf="_config.editButton">Edit</th>\n            <th *ngIf="_config.archiveButton">Archive</th>\n        </tr>\n        <ng-template #unsortableRow>\n            <tr>\n                <th *ngIf="hasReorderableColumn" style="width:3rem"></th>\n                <th *ngFor="let col of columns" pResizableColumn>\n                    {{col.displayName || col.name}}\n                </th>\n                <th *ngIf="_config.editButton">Edit</th>\n                <th *ngIf="_config.archiveButton">Archive</th>\n            </tr>\n        </ng-template>\n    </ng-template>\n\n    <ng-template pTemplate="body" let-row let-columns="columns" let-index="rowIndex">\n        <tr [pContextMenuRow]="row" [pSelectableRow]="row" [pReorderableRow]="index" (onDrop)="rowReordered($event)">\n            <td *ngIf="hasReorderableColumn">\n                <i class="fa fa-bars move" pReorderableRowHandle></i>\n            </td>\n            <td *ngFor="let col of columns" [class.with-select]="col.hasSelect" pEditableColumn class="ui-resizable-column" [ngClass]="col.extraClass ? col.extraClass(row) : \'\'">\n                <p-cellEditor *ngIf="col.editable; else onlyOutput">\n                    <ng-template pTemplate="input">\n                        <input type="text" class="form-control form-control-sm" [(ngModel)]="row[col.field]" />\n                    </ng-template>\n                    <ng-template pTemplate="output">\n                        <span>{{getCellValue(row, col)}}</span>\n                    </ng-template>\n                </p-cellEditor>\n                <ng-template #onlyOutput>\n                    <div *ngIf="col.hasSelect; else textInput">\n                        <p-dropdown class="w-auto mw-100" [options]="col.values" placeholder="Select" optionLabel="name" [filter]="true" filterBy="value.name" [(ngModel)]="row[col.name]">\n                        </p-dropdown>\n                    </div>\n                    <ng-template #textInput>\n                        <a *ngIf="col.withLink; else spanOnly" routerLink="/{{getLinkValue(row, col)}}">{{getCellValue(row, col)}}</a>\n                        <ng-template #spanOnly><span>{{getCellValue(row, col)}}</span></ng-template>\n                    </ng-template>\n                </ng-template>\n            </td>\n            <td *ngIf="_config.editButton"><button class="btn btn-xs btn-dark" (click)="edit.emit(row)">Edit</button></td>\n            <td *ngIf="_config.archiveButton"><button class="btn btn-xs" [ngClass]="row.archived ? \'btn-dark\' : \'btn-danger\'" (click)="archive.emit(row)">{{row.archived ? \'Restore\' : \'Archive\'}}</button></td>\n        </tr>\n    </ng-template>\n</p-table>\n\n<div *ngIf="(dataLoaded | async) === false">Loading data...</div>'}]}],e.ctorParameters=function(){return[]},e.propDecorators={config:[{type:t.Input,args:["config"]}],data:[{type:t.Input,args:["data"]}],columns:[{type:t.Input,args:["columns"]}],add:[{type:t.Output}],edit:[{type:t.Output}],archive:[{type:t.Output}],onResize:[{type:t.HostListener,args:["window:resize",["$event"]]}]},e}(),b=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[l.BrowserModule,r.BrowserAnimationsModule,o.FormsModule,o.ReactiveFormsModule,c.TableModule,d.TreeTableModule,s.MultiSelectModule,a.DropdownModule,u.TooltipModule,i.ContextMenuModule],declarations:[h],exports:[h]}]}],e}(),w=function x(e,t,n,o,l,r,i,a){void 0===n&&(n=!1),void 0===o&&(o=!1),void 0===l&&(l=!0),this.displayName=e,this.name=t,this.editable=n,this.reorderable=o,this.visible=l,this.render=r,this.extraClass=i,this.values=a,this.hasSelect=!1,this.withLink=null},v=function C(e,t){this.staticPath=e,this.dynamic=t},y=function I(e,t,n){this.enabled=e,this.node=t,this.items=n};e.PrimeTableService=p,e.PrimeTableComponent=h,e.PrimeTableModule=b,e.PrimeTableColumn=w,e.PrimeTableColumnLink=v,e.PrimeTableConfig=g,e.PrimeTableContextMenu=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=prime-table.umd.min.js.map